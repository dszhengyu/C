ASSUME CS:CODE, SS:STACK

STACK SEGMENT
	DW 32 DUP (0)
STACK ENDS

CODE SEGMENT
START:
	MOV AX, STACK
	MOV SS, AX
	MOV SP, 64
	
	PUSH CS
	POP DS
	MOV SI, OFFSET S
	MOV AX, 0
	MOV ES, AX
	MOV DI, 204H
	MOV CX, OFFSET SEND - OFFSET S
	CLD
	REP MOVSB
	
	PUSH ES:[9 * 4]
	PUSH ES:[9 * 4 + 2]
	POP ES:[202H]
	POP ES:[200H]
	
	;CALL S
	
	CLI
	MOV WORD PTR ES:[9 * 4], 204H
	MOV WORD PTR ES:[9 * 4 + 2], 0H
	STI
	
	MOV AX, 4C00H
	INT 21H
	
S:
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DS
	MOV AX, 0
	MOV ES, AX

	IN AL, 60H
	PUSHF
	CALL DWORD PTR ES:[200H]	
	CMP AL, 9EH
	JNE S3
	
	MOV CX, 2000
	MOV AX, 0B800H
	MOV ES, AX
	MOV BX, 0
K:
	MOV BYTE PTR ES:[BX], 41H
	ADD BX, 2
	LOOP K
	
S3:
	POP DS
	POP CX
	POP BX
	POP AX
	IRET
SEND:
	NOP
	
CODE ENDS
END START


